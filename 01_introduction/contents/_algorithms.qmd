# Iterative Algorithms and Convergence

## Algorithms {.smaller}

::: {.callout-tip appearance="minimal"}
Computers perform repetitive operations efficiently - algorithms are iterative
in nature.
:::

* An initial vector $\bm{x}_0$ is selected and the algorithm generates an
improved vector $\bm{x}_1$.

* This is repeated to get a still better vector $\bm{x}_2$.
* Continuing in this fashion, a sequence of ever-improving vectors $\bm{x}_0, 
\bm{x}_1, \ldots, \bm{x}_k, \ldots$ is found that approaches a solution point
$\bm{x}^\ast$.

* For linear programming this sequence may be made finite: __simplex method__.

* Algorithms must be analyzed to check if they will converge to a solution
point.
  - The rate at which they converge (if they do) are also analyzed: complexity
    analysis.
  - One cannot regard a problem as solved simply b/c an algorithm is known which
    will converge to the solution.
  - It may require an exorbitant amount of time to reduce the error to an
    acceptable tolerance.
